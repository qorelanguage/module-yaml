#!/usr/bin/env qore
# -*- mode: qore; indent-tabs-mode: nil -*-

%new-style
%require-types
%strict-args
%enable-all-warnings

%requires ../qlib/YamlRpcClient.qm
%requires QUnit

%exec-class YamlRpcClientTest

class YamlRpcClientTest inherits QUnit::Test {
    constructor() : Test("YamlRpcClient test", "1.0") {
        addTestCase("YAML-RPC client test", \testYamlRpcClient());
        addTestCase("YAML-RPC connection test", \testYamlRpcConnection());

        # Return for compatibility with test harness that checks return value.
        set_return_value(main());
    }

    testYamlRpcClient() {
        YamlRpcClient client(("url": "http://localhost:80"), True);

        assertEq(True, client instanceof YamlRpcClient);
    }

    testYamlRpcConnection() {
        string url = "yamlrpcs://localhost:8099/";
        YamlRpcConnection conn("test", "test", url, {"monitor": False});
        YamlRpcClient client = conn.get(False);
        string yurl = url;
        yurl =~ s/^yamlrpc/http/;
        assertEq(yurl, client.getURL());

        # test default path
        url = "yamlrpcs://localhost:8099";
        conn = new YamlRpcConnection("test", "test", url, {"monitor": False});
        client = conn.get(False);
        yurl = url;
        yurl =~ s/^yamlrpc/http/;
        assertEq(yurl + "/YAML", client.getURL());

        # issue #3696: test connection serialization
        YamlRpcConnection conn2 = Serializable::deserialize(conn.serialize());
        assertEq(conn.url, conn2.url);
    }
}
